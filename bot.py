import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
from telegram.error import BadRequest

TOKEN = os.getenv("BOT_TOKEN")
CHANNEL = "@FEH1KC"

if not TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç–∏–∫üå∏üå∏üå∏, —Å–º–æ–∂–µ—à—å –∑–∞–π—Ç–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ, –ø–æ—Å–ª–µ —è —É–≤–∏–∂—É —Ç–≤–æ–π –Ω–∏–∫ –∏ —Å—Ä–∞–∑—É –∂–µ –∫–∏–Ω—É –ø–æ–¥–∞—Ä–æ—á–µ–∫, –≤–æ—Ç [@vodka_bot](https://t.me/vodka_ref_bot?start=6605634314) ‚≠ê‚≠ê‚≠ê",
        parse_mode='Markdown'
    )
    await update.message.reply_text("–ù—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç–≥–∫ –∏ –ø—Ä–æ—Å—Ç–æ –∑–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç, –ø–æ—Å–ª–µ –≤ –±–æ—Ç–µ –Ω–∞–∂–∞—Ç—å ¬´–Ø –≤—Å–µ –≤—ã–ø–æ–ª–Ω–∏–ª¬ª, –ø–æ—Å–ª–µ —É –≤–∞—Å –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'.")
    await update.message.reply_text("–¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å –ø–æ–¥–∞—Ä–æ–∫.")

    keyboard = [[InlineKeyboardButton("–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data='subscribed')]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è¬ª.",
        reply_markup=reply_markup
    )

async def check_subscription(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.callback_query.from_user.id
    try:
        member = await context.bot.get_chat_member(CHANNEL, user_id)
        if member.status in ["member", "administrator", "creator"]:
            await update.callback_query.answer("–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª!")
            await update.callback_query.edit_message_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –¢–µ–ø–µ—Ä—å —Ç—ã –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞.")
        else:
            await update.callback_query.answer("–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª.")
            await update.callback_query.edit_message_text("–¢—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–¥–ø–∏—à–∏—Å—å –∏ –Ω–∞–∂–º–∏ ¬´–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è¬ª —Å–Ω–æ–≤–∞.")
    except BadRequest:
        await update.callback_query.answer("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.")

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(check_subscription, pattern="^subscribed$"))

app.run_polling()
